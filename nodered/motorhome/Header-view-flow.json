[
    {
        "id": "4ee18163f4ec685b",
        "type": "tab",
        "label": "Header",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "baae4f03c02323c3",
        "type": "mqtt in",
        "z": "4ee18163f4ec685b",
        "name": "alive status in",
        "topic": "service/truma/control_status/alive",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "cc4ba79e8dc93fb5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 140,
        "wires": [
            [
                "d2b6d6afcf9126ef"
            ]
        ]
    },
    {
        "id": "d2b6d6afcf9126ef",
        "type": "change",
        "z": "4ee18163f4ec685b",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "ON",
                "fromt": "str",
                "to": "Connected",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "OFF",
                "fromt": "str",
                "to": "Disconected",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 140,
        "wires": [
            [
                "a5ae270eaaa79fcd"
            ]
        ]
    },
    {
        "id": "a5ae270eaaa79fcd",
        "type": "change",
        "z": "4ee18163f4ec685b",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "isalive",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 140,
        "wires": [
            [
                "cd83097d4b92c46a"
            ]
        ]
    },
    {
        "id": "d667e5b998a68f37",
        "type": "change",
        "z": "4ee18163f4ec685b",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload.value",
                "pt": "msg",
                "to": "outside_temp",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 460,
        "wires": [
            [
                "cd83097d4b92c46a"
            ]
        ]
    },
    {
        "id": "66d3e048ef22d138",
        "type": "inject",
        "z": "4ee18163f4ec685b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 240,
        "wires": [
            [
                "2b99f2e1d5882193"
            ]
        ]
    },
    {
        "id": "b387c5de0513eecc",
        "type": "mqtt in",
        "z": "4ee18163f4ec685b",
        "name": "room temp in",
        "topic": "service/truma/control_status/current_temp_room",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "cc4ba79e8dc93fb5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 360,
        "wires": [
            [
                "6ef72a4b015b6f6c"
            ]
        ]
    },
    {
        "id": "48f8feebf33dcaf0",
        "type": "file in",
        "z": "4ee18163f4ec685b",
        "name": "read background file",
        "filename": "/data/assets/header-image",
        "filenameType": "str",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 440,
        "y": 620,
        "wires": [
            [
                "b72486c2ec60f4e2"
            ]
        ]
    },
    {
        "id": "847c182ad0bd0d1d",
        "type": "inject",
        "z": "4ee18163f4ec685b",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 210,
        "y": 660,
        "wires": [
            [
                "48f8feebf33dcaf0"
            ]
        ]
    },
    {
        "id": "8a3317e5789aa30c",
        "type": "change",
        "z": "4ee18163f4ec685b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "background",
                "pt": "msg",
                "to": "\"data:image/jpg;base64,\" & payload",
                "tot": "jsonata"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 620,
        "wires": [
            [
                "cd83097d4b92c46a"
            ]
        ]
    },
    {
        "id": "c55d6773b930e1db",
        "type": "inject",
        "z": "4ee18163f4ec685b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "OFF",
        "payloadType": "str",
        "x": 210,
        "y": 100,
        "wires": [
            [
                "d2b6d6afcf9126ef"
            ]
        ]
    },
    {
        "id": "9e9a9d64ac28d264",
        "type": "inject",
        "z": "4ee18163f4ec685b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "ON",
        "payloadType": "str",
        "x": 210,
        "y": 200,
        "wires": [
            [
                "d2b6d6afcf9126ef"
            ]
        ]
    },
    {
        "id": "546f2921376e270a",
        "type": "change",
        "z": "4ee18163f4ec685b",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "datetime",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 240,
        "wires": [
            [
                "cd83097d4b92c46a"
            ]
        ]
    },
    {
        "id": "cc7e453e8a761431",
        "type": "change",
        "z": "4ee18163f4ec685b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "time",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "2b99f2e1d5882193",
        "type": "ui-template",
        "z": "4ee18163f4ec685b",
        "group": "",
        "page": "0e94453eb43f91ea",
        "ui": "",
        "name": "date/time",
        "order": 2,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n    <span style=\"display:none\">{{ updateDateTime }}</span>\n</template>\n\n<script>\n\n    export default {\n        computed: {\n            // automatically compute this variable\n            // whenever VueJS deems appropriate\n            \n            updateDateTime: function () {\n                // reference the payload so this method \n                // gets called on every payload update\n                const p = this.msg.payload;\n                const dt = new Date();\n           \n                // Format Date\n                const dateOptions = { weekday: 'long', year: 'numeric', month: 'short', day: '2-digit'};\n                const date = dt.toLocaleDateString('en-GB', dateOptions);\n                \n                // Format Date\n                const timeOptions = { hourCycle:'h12', hour: 'numeric', minute: '2-digit'};\n                const time = dt.toLocaleTimeString('en-GB', timeOptions);\n                \n                // Get Time Zone info\n                const timezoneOffset = dt.getTimezoneOffset();\n                const timezoneLong = new Intl.DateTimeFormat().resolvedOptions().timeZone;\n                const dtf = Intl.DateTimeFormat(undefined, {timeZoneName: 'short'});\n\n                // Format the date to parts, and pull out the value of the time zone name\n                const timezoneShort = dtf.formatToParts(dt).find((part) => part.type == 'timeZoneName').value;\n\n\n                this.send({payload: {\n                    \"date\": date, \n                    \"time\": time, \n                    \"timezoneOffset\": timezoneOffset, \n                    \"timezoneLong\": timezoneLong,\n                    \"timezoneShort\": timezoneShort\n                }})\n               return \"\"\n            }\n        },\n        mounted() {\n            // code here when the component is first loaded\n            \n        },\n        unmounted() {\n            // code here when the component is removed from the Dashboard\n            // i.e. when the user navigates away from the page\n        }\n    }\n</script>\n",
        "storeOutMessages": true,
        "passthru": false,
        "resendOnRefresh": true,
        "templateScope": "widget:page",
        "className": "",
        "x": 440,
        "y": 240,
        "wires": [
            [
                "546f2921376e270a",
                "cc7e453e8a761431"
            ]
        ]
    },
    {
        "id": "b72486c2ec60f4e2",
        "type": "base64",
        "z": "4ee18163f4ec685b",
        "name": "",
        "action": "",
        "property": "payload",
        "x": 620,
        "y": 620,
        "wires": [
            [
                "8a3317e5789aa30c"
            ]
        ]
    },
    {
        "id": "ee60518f48e26bc6",
        "type": "link in",
        "z": "4ee18163f4ec685b",
        "name": "header/set-global-location",
        "links": [
            "d95068b5cb6f8bd3"
        ],
        "x": 465,
        "y": 60,
        "wires": [
            [
                "59467e9087b830ab"
            ]
        ]
    },
    {
        "id": "895577a7aed83abb",
        "type": "link in",
        "z": "4ee18163f4ec685b",
        "name": "header/background",
        "links": [
            "8505197984fb099b"
        ],
        "x": 245,
        "y": 580,
        "wires": [
            [
                "48f8feebf33dcaf0"
            ]
        ]
    },
    {
        "id": "59467e9087b830ab",
        "type": "change",
        "z": "4ee18163f4ec685b",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "location",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 60,
        "wires": [
            [
                "cd83097d4b92c46a"
            ]
        ]
    },
    {
        "id": "cd83097d4b92c46a",
        "type": "ui-template",
        "z": "4ee18163f4ec685b",
        "group": "9d6bf04c2e481fb5",
        "page": "",
        "ui": "",
        "name": "",
        "order": 1,
        "width": "16",
        "height": "1",
        "head": "",
        "format": "<template>\n <v-card class=\"my-v-card-header\">\n   <div>\n       <!--\n       <v-img\n            v-if=\"msg.payload\"\n            :width=\"msg.width || 320\"\n            aspect-ratio=\"msg.aspec || 16/9\"\n            cover\n            :src=\"msg.payload\"/>\n            -->\n        <v-img\n            \n            max-width=\"100%\"\n            max-height=\"150\"\n            cover\n            :eager=\"true\"\n            :src=\"msg.background\">\n            \n            <div class=\"my-header-container\">\n                <div class=\"my-date-time\">\n                    <p class=\"my-time\">{{msg.datetime.time}}</p>\n                    <p class=\"my-date\">{{msg.datetime.date}}</p>\n                    <p class=\"my-timezone\">{{msg.datetime.timezoneLong}} ({{msg.datetime.timezoneShort}} {{msg.datetime.timezoneOffset}})</p>\n                    <p>{{msg.location?.formatted}}</p>\n                    <p :class=\"msg.isalive == 'Connected' | msg.payload == 0 ? 'my-isalive-green' : 'my-isalive-red'\">{{msg.isalive}}<p>\n                </div>\n                <div class=\"my-temps\">\n                    <div class=\"my-temperature-span\">\n                        <p class=\"my-temperature-label\">outside</p>\n                        <p class=\"my-temperature-value\">{{msg.outside_temp}}°c</p>\n                    </div>\n                    <div class=\"my-temperature-span\">\n                        <p class=\"my-temperature-label\">inside</p>\n                        <p class=\"my-temperature-value\">{{msg.inside_temp}}°c</p>\n                    </div>\n                </div>\n            </div>\n        \n        </v-img>\n   </div>\n   </v-card>\n</template>\n\n\n<style>\n \n    .my-v-card-header {\n        margin:-17px;\n        border-radius:12px\n    }\n    \n    .my-header-container {\n        display:flex;\n        align-items: flex-end;\n        padding: 4px 12px 0px 12px;\n        color: rgb(var(--theme-fg-light));\n        \n    }\n    \n    .my-date-time {\n        margin-top:-12px;\n        flex-grow:9;\n        \n    }\n    .my-temps {\n        flex-grow:1;\n    }\n    \n    .my-time {\n        \n        font-size:3em;\n        opacity:1;\n    }\n    .my-timezone {\n        margin-top:6px;\n        font-size:.9em;\n        opacity:1;\n        \n    }\n    .my-date {\n        margin-top:0px;\n    }\n    \n    .my-temperature-span {\n        \n    }\n    \n    .my-temperature-label {\n        text-align:center;\n    }\n    \n    .my-temperature-value {\n        font-size:2em;\n        text-align:center;\n        margin-top:6px;\n    }\n    \n    .my-isalive-green {\n        font-size: 0.8em;\n        color: rgb(var(--theme-fg-connected));\n    }\n    \n    \n    .my-isalive-red {\n        font-size:0.8em;\n        color: rgb(var(--theme-fg-disconnected));\n    }\n</style>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1120,
        "y": 280,
        "wires": [
            [
                "7daf1ac7d6531052"
            ]
        ]
    },
    {
        "id": "7daf1ac7d6531052",
        "type": "debug",
        "z": "4ee18163f4ec685b",
        "d": true,
        "name": "debug 6",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1280,
        "y": 280,
        "wires": []
    },
    {
        "id": "e97b3bade7bf6de0",
        "type": "mqtt in",
        "z": "4ee18163f4ec685b",
        "name": "LPG-L Tank",
        "topic": "N/c0619ab5fb12/tank/24/Temperature",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "cc4ba79e8dc93fb5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 460,
        "wires": [
            [
                "d667e5b998a68f37"
            ]
        ]
    },
    {
        "id": "e9f464c5c319802b",
        "type": "mqtt in",
        "z": "4ee18163f4ec685b",
        "name": "LPG-R Tank",
        "topic": "N/c0619ab5fb12/tank/25/Temperature",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "cc4ba79e8dc93fb5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 520,
        "wires": [
            [
                "d667e5b998a68f37"
            ]
        ]
    },
    {
        "id": "6ef72a4b015b6f6c",
        "type": "change",
        "z": "4ee18163f4ec685b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$round(msg.payload)",
                "tot": "jsonata"
            },
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "inside_temp",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 360,
        "wires": [
            [
                "cd83097d4b92c46a"
            ]
        ]
    },
    {
        "id": "f091cfaec6d60494",
        "type": "comment",
        "z": "4ee18163f4ec685b",
        "name": "Date: 22/Jul/2025",
        "info": "# Fridge\nThis flow turns the Cerbo GX relay 2 on or off either manualy or automaticaly.\nRelay 2 is supplies a 12v to the Fridges S+ input, signaling to use power from the battery/solar.\n\nThis is depentent on how your fridge is wired.\n\n## 3 modes\n - On (manual)\n - Off (manual)\n - Auto\n\n**On** and **off** turn relay 2 on an off manually.\n**Auto** will automaticaly determin when to turn the relay on or off based on the battery level\n\n**Auto* Switches the fridge to battery when there is no shore power(ehu) and the battery charge level reaches 98% or above.\n\n**Auto** Switches the fridge to off When the battery level goes below 95%",
        "x": 260,
        "y": 40,
        "wires": []
    },
    {
        "id": "b50c5d0a2a9d1292",
        "type": "comment",
        "z": "4ee18163f4ec685b",
        "name": "Description",
        "info": "# Header\nThis flow contains the code for displaying the main victron services such as Battery/Water/Waste/Gas Levels, and power input and output\n\n\n",
        "x": 100,
        "y": 40,
        "wires": []
    },
    {
        "id": "cc4ba79e8dc93fb5",
        "type": "mqtt-broker",
        "name": "cerbo",
        "broker": "192.168.10.20",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "0e94453eb43f91ea",
        "type": "ui-page",
        "name": "Motorhome",
        "ui": "563c3834aa95d21c",
        "path": "/grace",
        "icon": "rv-truck",
        "layout": "grid",
        "theme": "b4dc292b8e533b16",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "8"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "16"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "16"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "16"
            }
        ],
        "order": 1,
        "className": "",
        "visible": "true",
        "disabled": "true"
    },
    {
        "id": "9d6bf04c2e481fb5",
        "type": "ui-group",
        "name": "Header",
        "page": "0e94453eb43f91ea",
        "width": "16",
        "height": "1",
        "order": 1,
        "showTitle": false,
        "className": "",
        "visible": true,
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "563c3834aa95d21c",
        "type": "ui-base",
        "name": "Motorhome",
        "path": "/dashboard",
        "appIcon": "rv-truck",
        "includeClientData": true,
        "acceptsClientConfig": [
            "ui-notification",
            "ui-control"
        ],
        "showPathInSidebar": false,
        "headerContent": "none",
        "navigationStyle": "none",
        "titleBarStyle": "hidden",
        "showReconnectNotification": false,
        "notificationDisplayTime": "1",
        "showDisconnectNotification": false,
        "allowInstall": true
    },
    {
        "id": "b4dc292b8e533b16",
        "type": "ui-theme",
        "name": "dark theme",
        "colors": {
            "surface": "#282828",
            "primary": "#0094ce",
            "bgPage": "#00374a",
            "groupBg": "#171821",
            "groupOutline": "#323344"
        },
        "sizes": {
            "density": "default",
            "pagePadding": "2px",
            "groupGap": "6px",
            "groupBorderRadius": "12px",
            "widgetGap": "4px"
        },
        "info": "0094CE\n\n00374A\n\n171821"
    }
]