[
    {
        "id": "ba0dc03d0eaf375d",
        "type": "tab",
        "label": "Heating",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0b7fb74d69f80f18",
        "type": "mqtt in",
        "z": "ba0dc03d0eaf375d",
        "name": "room temp in",
        "topic": "service/truma/control_status/current_temp_room",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "cc4ba79e8dc93fb5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 140,
        "wires": [
            [
                "4220e2864c342a8c"
            ]
        ]
    },
    {
        "id": "91ecaa62f4d96dc4",
        "type": "mqtt in",
        "z": "ba0dc03d0eaf375d",
        "name": "target room temp in",
        "topic": "service/truma/control_status/target_temp_room",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "cc4ba79e8dc93fb5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 110,
        "y": 320,
        "wires": [
            [
                "9cb42f1282a50483"
            ]
        ]
    },
    {
        "id": "61f0350ecca9456b",
        "type": "mqtt out",
        "z": "ba0dc03d0eaf375d",
        "name": "target room temp out",
        "topic": "service/truma/set/target_temp_room",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "cc4ba79e8dc93fb5",
        "x": 1550,
        "y": 260,
        "wires": []
    },
    {
        "id": "92d9fe7f2b443c34",
        "type": "mqtt in",
        "z": "ba0dc03d0eaf375d",
        "name": "heating mode in",
        "topic": "service/truma/control_status/heating_mode",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "cc4ba79e8dc93fb5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 200,
        "wires": [
            [
                "86684a3ebe75711d"
            ]
        ]
    },
    {
        "id": "0e6d36e059fe71a3",
        "type": "mqtt out",
        "z": "ba0dc03d0eaf375d",
        "name": "heating mode out",
        "topic": "service/truma/set/heating_mode",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "cc4ba79e8dc93fb5",
        "x": 1540,
        "y": 200,
        "wires": []
    },
    {
        "id": "8163336bf4e0eb7a",
        "type": "change",
        "z": "ba0dc03d0eaf375d",
        "name": "set payload to off",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "off",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1300,
        "y": 130,
        "wires": [
            [
                "dd58857b99191d69"
            ]
        ]
    },
    {
        "id": "dd58857b99191d69",
        "type": "mqtt out",
        "z": "ba0dc03d0eaf375d",
        "name": "Aircon operating mode out",
        "topic": "service/truma/set/aircon_operating_mode",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "cc4ba79e8dc93fb5",
        "x": 1570,
        "y": 130,
        "wires": []
    },
    {
        "id": "9cb42f1282a50483",
        "type": "switch",
        "z": "ba0dc03d0eaf375d",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "5",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 270,
        "y": 320,
        "wires": [
            [
                "ad921636a8c50c99"
            ],
            [
                "685d4a6479ecb240"
            ]
        ]
    },
    {
        "id": "f60b473e30f6d461",
        "type": "function",
        "z": "ba0dc03d0eaf375d",
        "name": "Init variables",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nif (flow.heatingTargetTemp == undefined) {\n    flow.heatingTargetTemp = 18;\n}",
        "finalize": "",
        "libs": [],
        "x": 130,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "685d4a6479ecb240",
        "type": "change",
        "z": "ba0dc03d0eaf375d",
        "name": "use flow.heating-target-temp",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "heating-target-temp",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 370,
        "wires": [
            [
                "ad921636a8c50c99"
            ]
        ]
    },
    {
        "id": "deae4e277eeb60ef",
        "type": "change",
        "z": "ba0dc03d0eaf375d",
        "name": "save payload to flow.heating-target-temp",
        "rules": [
            {
                "t": "set",
                "p": "heating-target-temp",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1200,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "436eb76b6b62a941",
        "type": "function",
        "z": "ba0dc03d0eaf375d",
        "name": "init from flow|payload",
        "func": "if (msg.topic == undefined || msg.topic == '') {\n    node.error('topic not defined');\n    return;\n}\n\nmsg.payload = flow.get(msg.topic) || msg.payload;\n\nif (msg.payload == undefined) {\n    return;\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nif (flow.get(\"water-on-time\") == undefined\n    || flow.get(\"water-schedule-enabled\") == undefined)  {\n    flow.set(\"water-schedule-enabled\", false);\n}\n",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 470,
        "wires": [
            [
                "ad921636a8c50c99"
            ]
        ]
    },
    {
        "id": "5c93498f8f4ee52a",
        "type": "inject",
        "z": "ba0dc03d0eaf375d",
        "name": "Init State: heating-target-temp",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "heating-target-temp",
        "payload": "18",
        "payloadType": "num",
        "x": 250,
        "y": 470,
        "wires": [
            [
                "436eb76b6b62a941"
            ]
        ]
    },
    {
        "id": "cab69d894afc853a",
        "type": "switch",
        "z": "ba0dc03d0eaf375d",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "off",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 1,
        "x": 1100,
        "y": 130,
        "wires": [
            [
                "8163336bf4e0eb7a"
            ]
        ]
    },
    {
        "id": "86684a3ebe75711d",
        "type": "ui-button-group",
        "z": "ba0dc03d0eaf375d",
        "name": "Heating mode",
        "group": "b2cf0d7c15dc58a7",
        "order": 1,
        "width": "6",
        "height": "1",
        "label": "",
        "className": "my-group-button-compact white-label my-btn-border my-btn-separator",
        "rounded": true,
        "useThemeColors": true,
        "passthru": false,
        "options": [
            {
                "label": "Off",
                "icon": "power-off",
                "value": "off",
                "valueType": "str",
                "color": "#009933"
            },
            {
                "label": "Eco",
                "icon": "thermometer-low",
                "value": "eco",
                "valueType": "str",
                "color": "#999999"
            },
            {
                "label": "Hot",
                "icon": "thermometer-high",
                "value": "hot",
                "valueType": "str",
                "color": "#ff6666"
            }
        ],
        "topic": "heating-mode",
        "topicType": "str",
        "x": 800,
        "y": 200,
        "wires": [
            [
                "cab69d894afc853a",
                "0e6d36e059fe71a3"
            ]
        ]
    },
    {
        "id": "ad921636a8c50c99",
        "type": "ui-slider",
        "z": "ba0dc03d0eaf375d",
        "group": "b2cf0d7c15dc58a7",
        "name": "",
        "label": "Target Temp",
        "tooltip": "",
        "order": 3,
        "width": "6",
        "height": "1",
        "passthru": true,
        "outs": "all",
        "topic": "heating-target-temp",
        "topicType": "str",
        "thumbLabel": "false",
        "showTicks": "false",
        "min": "30",
        "max": "5",
        "step": 1,
        "className": "",
        "iconPrepend": "",
        "iconAppend": "",
        "color": "",
        "colorTrack": "",
        "colorThumb": "",
        "showTextField": false,
        "x": 810,
        "y": 310,
        "wires": [
            [
                "deae4e277eeb60ef",
                "49a7d6228c1585d3",
                "df4350ad5fa60200"
            ]
        ]
    },
    {
        "id": "50ee502672889de1",
        "type": "ui-text",
        "z": "ba0dc03d0eaf375d",
        "group": "b2cf0d7c15dc58a7",
        "order": 4,
        "width": "2",
        "height": "1",
        "name": "Temp value",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": true,
        "font": "",
        "fontSize": "16",
        "color": "#ffffff",
        "wrapText": false,
        "className": "",
        "x": 1290,
        "y": 320,
        "wires": []
    },
    {
        "id": "2f9b12bc6b99b854",
        "type": "ui-text",
        "z": "ba0dc03d0eaf375d",
        "group": "b2cf0d7c15dc58a7",
        "order": 2,
        "width": "2",
        "height": "1",
        "name": "Current Temp",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-right",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 520,
        "y": 140,
        "wires": []
    },
    {
        "id": "4220e2864c342a8c",
        "type": "change",
        "z": "ba0dc03d0eaf375d",
        "name": "format payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$round(msg.payload) & \"°c\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 140,
        "wires": [
            [
                "2f9b12bc6b99b854"
            ]
        ]
    },
    {
        "id": "49a7d6228c1585d3",
        "type": "template",
        "z": "ba0dc03d0eaf375d",
        "name": "°c",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{{payload}}°c",
        "output": "str",
        "x": 1070,
        "y": 310,
        "wires": [
            [
                "50ee502672889de1"
            ]
        ]
    },
    {
        "id": "c0286ab49eb72a38",
        "type": "trigger",
        "z": "ba0dc03d0eaf375d",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "1",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1300,
        "y": 260,
        "wires": [
            [
                "61f0350ecca9456b"
            ]
        ]
    },
    {
        "id": "df4350ad5fa60200",
        "type": "rbe",
        "z": "ba0dc03d0eaf375d",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1070,
        "y": 260,
        "wires": [
            [
                "c0286ab49eb72a38"
            ]
        ]
    },
    {
        "id": "34895af9d05247ef",
        "type": "comment",
        "z": "ba0dc03d0eaf375d",
        "name": "Description",
        "info": "# Heating\nThis flow controls the truma heating via an inetbox2mqtt microcontroller\n\n",
        "x": 120,
        "y": 30,
        "wires": []
    },
    {
        "id": "ecd776fd17e675e4",
        "type": "comment",
        "z": "ba0dc03d0eaf375d",
        "name": "Date: 22/Jul/2025",
        "info": "# Fridge\nThis flow turns the Cerbo GX relay 2 on or off either manualy or automaticaly.\nRelay 2 is supplies a 12v to the Fridges S+ input, signaling to use power from the battery/solar.\n\nThis is depentent on how your fridge is wired.\n\n## 3 modes\n - On (manual)\n - Off (manual)\n - Auto\n\n**On** and **off** turn relay 2 on an off manually.\n**Auto** will automaticaly determin when to turn the relay on or off based on the battery level\n\n**Auto* Switches the fridge to battery when there is no shore power(ehu) and the battery charge level reaches 98% or above.\n\n**Auto** Switches the fridge to off When the battery level goes below 95%",
        "x": 280,
        "y": 30,
        "wires": []
    },
    {
        "id": "cc4ba79e8dc93fb5",
        "type": "mqtt-broker",
        "name": "cerbo",
        "broker": "192.168.10.20",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "b2cf0d7c15dc58a7",
        "type": "ui-group",
        "name": "Heating",
        "page": "0e94453eb43f91ea",
        "width": "8",
        "height": "1",
        "order": 5,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "0e94453eb43f91ea",
        "type": "ui-page",
        "name": "Motorhome",
        "ui": "563c3834aa95d21c",
        "path": "/grace",
        "icon": "rv-truck",
        "layout": "grid",
        "theme": "b4dc292b8e533b16",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "8"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "16"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "16"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "16"
            }
        ],
        "order": 1,
        "className": "",
        "visible": "true",
        "disabled": "true"
    },
    {
        "id": "563c3834aa95d21c",
        "type": "ui-base",
        "name": "Motorhome",
        "path": "/dashboard",
        "appIcon": "rv-truck",
        "includeClientData": true,
        "acceptsClientConfig": [
            "ui-notification",
            "ui-control"
        ],
        "showPathInSidebar": false,
        "headerContent": "none",
        "navigationStyle": "none",
        "titleBarStyle": "hidden",
        "showReconnectNotification": false,
        "notificationDisplayTime": "1",
        "showDisconnectNotification": false,
        "allowInstall": true
    },
    {
        "id": "b4dc292b8e533b16",
        "type": "ui-theme",
        "name": "dark theme",
        "colors": {
            "surface": "#282828",
            "primary": "#0094ce",
            "bgPage": "#00374a",
            "groupBg": "#171821",
            "groupOutline": "#323344"
        },
        "sizes": {
            "density": "default",
            "pagePadding": "2px",
            "groupGap": "6px",
            "groupBorderRadius": "12px",
            "widgetGap": "4px"
        },
        "info": "0094CE\n\n00374A\n\n171821"
    }
]